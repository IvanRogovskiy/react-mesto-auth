{"ast":null,"code":"var _jsxFileName = \"/Users/ivanrogovskiy/Documents/tries/yandex/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport '../App.css';\nimport React from \"react\";\nimport '../index.css';\nimport api from '../utils/Api';\nimport { CurrentUserContext } from '../contexts/currentUserContext';\nimport { Switch, Route, withRouter, useHistory } from 'react-router-dom';\nimport PageContainer from './PageContainer';\nimport ProtectedRoute from './ProtectedRoute';\nimport Login from './Login';\nimport Register from \"./Register\";\nimport * as auth from \"../utils/auth\";\nimport Preloader from \"./Preloader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [account, setAccount] = React.useState('');\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(true);\n  const history = useHistory();\n  const [cards, setCards] = React.useState([]);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({\n    isOpened: false,\n    name: \"\",\n    link: \"\"\n  });\n\n  const handleLogin = () => {\n    handleTokenCheck();\n  };\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  };\n\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  };\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(true);\n  };\n\n  const closeAllPopups = () => {\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setSelectedCard({ ...selectedCard,\n      isOpened: false\n    });\n  };\n\n  const handleEscPress = e => {\n    if (e.keyCode === 27) {\n      closeAllPopups();\n    }\n  };\n\n  const handleCardClick = card => {\n    setSelectedCard({\n      isOpened: true,\n      name: card.name,\n      link: card.link\n    });\n  };\n\n  const handleUpdateUser = _ref => {\n    let {\n      name,\n      about\n    } = _ref;\n    api.updateUserInfo({\n      name,\n      about\n    }).then(data => setCurrentUser({\n      currentUser,\n      ...data\n    })).catch(err => console.log(err));\n    closeAllPopups();\n  };\n\n  const handleUpdateAvatar = link => {\n    api.updateUserAvatar(link).then(data => setCurrentUser({\n      currentUser,\n      ...data\n    })).catch(err => console.log(err));\n    closeAllPopups();\n  };\n\n  const handlePlaceAdd = _ref2 => {\n    let {\n      name,\n      link\n    } = _ref2;\n    api.addNewCard({\n      name,\n      link\n    }).then(newCard => {\n      setCards([newCard, ...cards]);\n    }).catch(err => console.log(err));\n    closeAllPopups();\n  };\n\n  const handleCardLike = card => {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    debugger;\n\n    if (!isLiked) {\n      api.addLike(card._id).then(newCard => {\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\n      }).catch(err => console.log(err));\n    } else {\n      api.removeLike(card._id).then(newCard => {\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\n      }).catch(err => console.log(err));\n    }\n  };\n\n  const handleCardDelete = card => {\n    api.deleteCard(card._id).then(() => {\n      setCards(state => state.filter(c => c._id !== card._id));\n    }).catch(err => console.log(err));\n  };\n\n  const handleTokenCheck = () => {\n    if (localStorage.getItem('jwt')) {\n      const jwt = localStorage.getItem('jwt');\n      auth.checkToken(jwt).then(_ref3 => {\n        let {\n          data\n        } = _ref3;\n        debugger;\n        console.log(data.email);\n        setAccount(data.email);\n        setIsLoggedIn(true); // history.push('/');\n\n        setIsLoading(false);\n      }).catch(err => console.log(err)).finally(() => {\n        setIsLoading(false);\n      });\n    } else {\n      setIsLoading(false);\n    }\n  };\n\n  React.useEffect(() => {\n    api.getMyProfileInfo().then(userData => {\n      console.log(userData);\n      setCurrentUser(userData);\n    }).catch(err => console.log(err));\n  }, []);\n  React.useEffect(() => {\n    api.getUsersCards().then(userCards => {\n      setCards(userCards);\n    }).catch(err => console.log(err));\n  }, []);\n  React.useEffect(() => {\n    const handleEscPress = e => {\n      if (e.key === 'Escape') {\n        closeAllPopups();\n      }\n    };\n\n    window.addEventListener('keydown', handleEscPress);\n    return () => {\n      window.removeEventListener('keydown', handleEscPress);\n    };\n  }, [closeAllPopups]);\n  React.useEffect(handleTokenCheck, [history]);\n  return isLoading ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 15\n  }, this) : /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: {\n      currentUser,\n      account,\n      isLoggedIn\n    },\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        component: PageContainer,\n        exact: true,\n        path: \"/\",\n        handleEscPress: handleEscPress,\n        handleEditProfileClick: handleEditProfileClick,\n        handleEditAvatarClick: handleEditAvatarClick,\n        handleAddPlaceClick: handleAddPlaceClick,\n        handleCardClick: handleCardClick,\n        cards: cards,\n        user: currentUser,\n        handleUpdateUser: handleUpdateUser,\n        handleCardLike: handleCardLike,\n        handleCardDelete: handleCardDelete,\n        isAddPlacePopupOpen: isAddPlacePopupOpen,\n        closeAllPopups: closeAllPopups,\n        handlePlaceAdd: handlePlaceAdd,\n        isEditProfilePopupOpen: isEditProfilePopupOpen,\n        isEditAvatarPopupOpen: isEditAvatarPopupOpen,\n        handleUpdateAvatar: handleUpdateAvatar,\n        selectedCard: selectedCard,\n        loggedIn: isLoggedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/sign-in\",\n        children: /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/sign-up\",\n        children: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 13\n  }, this);\n};\n\n_s(App, \"F+iu5EIEQuZTTVv1SbTRzuVAayM=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default _c2 = withRouter(App);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/ivanrogovskiy/Documents/tries/yandex/react-mesto-auth/src/components/App.js"],"names":["React","api","CurrentUserContext","Switch","Route","withRouter","useHistory","PageContainer","ProtectedRoute","Login","Register","auth","Preloader","App","currentUser","setCurrentUser","useState","account","setAccount","isLoggedIn","setIsLoggedIn","isLoading","setIsLoading","history","cards","setCards","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","isOpened","name","link","handleLogin","handleTokenCheck","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","closeAllPopups","handleEscPress","e","keyCode","handleCardClick","card","handleUpdateUser","about","updateUserInfo","then","data","catch","err","console","log","handleUpdateAvatar","updateUserAvatar","handlePlaceAdd","addNewCard","newCard","handleCardLike","isLiked","likes","some","i","_id","addLike","state","map","c","removeLike","handleCardDelete","deleteCard","filter","localStorage","getItem","jwt","checkToken","email","finally","useEffect","getMyProfileInfo","userData","getUsersCards","userCards","key","window","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import '../App.css';\nimport React from \"react\";\nimport '../index.css'\nimport api from '../utils/Api';\nimport { CurrentUserContext } from '../contexts/currentUserContext';\nimport {Switch, Route, withRouter, useHistory} from 'react-router-dom';\nimport PageContainer from './PageContainer';\nimport ProtectedRoute from './ProtectedRoute';\nimport Login from './Login';\nimport Register from \"./Register\";\nimport * as auth from \"../utils/auth\";\nimport Preloader from \"./Preloader\";\n\nconst App = () => {\n\n    const [currentUser, setCurrentUser] = React.useState({});\n    const [account, setAccount] = React.useState('')\n    const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n    const [isLoading, setIsLoading] = React.useState(true);\n    const history = useHistory()\n\n    const [cards, setCards] = React.useState([]);\n\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [selectedCard, setSelectedCard] = React.useState({\n        isOpened: false,\n        name: \"\",\n        link: \"\"\n    });\n\n    const handleLogin = () => {\n        handleTokenCheck();\n    }\n\n    const handleEditAvatarClick = () => {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    const handleEditProfileClick = () => {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    const handleAddPlaceClick = () => {\n        setIsAddPlacePopupOpen(true);\n    }\n    \n    const closeAllPopups = () => {\n        setIsAddPlacePopupOpen(false);\n        setIsEditAvatarPopupOpen(false);\n        setIsEditProfilePopupOpen(false);\n        setSelectedCard({...selectedCard, isOpened: false})\n    }\n\n    const handleEscPress = (e) => {\n      if (e.keyCode === 27) {\n          closeAllPopups()\n      }\n    }\n\n    const handleCardClick = (card) => {\n        setSelectedCard({\n            isOpened: true,\n            name: card.name ,\n            link: card.link,\n        })\n    }\n    \n    const handleUpdateUser = ({name, about}) => {\n      api.updateUserInfo({name, about})\n          .then(data => setCurrentUser({currentUser, ...data}))\n          .catch(err => console.log(err))\n      closeAllPopups();\n    }\n\n    const handleUpdateAvatar = (link) => {\n        api.updateUserAvatar(link)\n            .then(data => setCurrentUser({currentUser, ...data}))\n            .catch(err => console.log(err))\n        closeAllPopups();\n    }\n\n    const handlePlaceAdd = ({name, link}) => {\n        api.addNewCard({name, link})\n            .then(newCard => {\n                setCards([newCard, ...cards])\n            })\n            .catch(err => console.log(err))\n        closeAllPopups();\n    }\n\n    const handleCardLike = (card) => {\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        debugger\n        if (!isLiked) {\n            api.addLike(card._id)\n                .then((newCard) => {\n                setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n            })\n                .catch(err => console.log(err));\n        } else {\n            api.removeLike(card._id)\n                .then((newCard) => {\n                    setCards((state) => state.map((c) => c._id === card._id ? newCard : c))})\n                .catch(err => console.log(err))\n        }\n\n    }\n\n    const handleCardDelete = (card) => {\n        api.deleteCard(card._id)\n            .then(() => {\n                setCards((state) => state.filter((c) => c._id !== card._id))})\n            .catch(err => console.log(err))\n    }\n    \n    const handleTokenCheck = () => {\n      if (localStorage.getItem('jwt')) {\n          const jwt = localStorage.getItem('jwt');\n          auth.checkToken(jwt)\n              .then(({data})=> {\n                  debugger;\n                  console.log(data.email);\n                  setAccount(data.email)\n                  setIsLoggedIn(true);\n                  // history.push('/');\n                  setIsLoading(false);\n              })\n              .catch(err => console.log(err))\n              .finally(() => {\n                  setIsLoading(false)\n              })\n      } else {\n          setIsLoading(false)\n      }\n    }\n\n    React.useEffect(() => {\n        api.getMyProfileInfo()\n            .then((userData) => {\n                console.log(userData);\n                setCurrentUser(userData)\n            })\n            .catch(err => console.log(err))\n    }, [])\n\n    React.useEffect(() => {\n        api.getUsersCards()\n            .then((userCards) => {\n                setCards(userCards)\n            })\n            .catch(err => console.log(err))\n    }, [])\n\n    React.useEffect(() => {\n        const handleEscPress = (e) => {\n            if (e.key === 'Escape') {\n                closeAllPopups();\n            }\n        }\n        window.addEventListener('keydown', handleEscPress);\n        return () => {\n            window.removeEventListener('keydown', handleEscPress);\n        }\n    }, [closeAllPopups])\n\n    React.useEffect(handleTokenCheck, [history])\n\n    return (\n      isLoading\n          ? ( <Preloader/> )\n          :\n          ( <CurrentUserContext.Provider value={{currentUser, account, isLoggedIn}}>\n                <Switch>\n                    <ProtectedRoute\n                        component={PageContainer}\n                        exact\n                        path={\"/\"}\n                        handleEscPress={handleEscPress}\n                        handleEditProfileClick={handleEditProfileClick}\n                        handleEditAvatarClick={handleEditAvatarClick}\n                        handleAddPlaceClick={handleAddPlaceClick}\n                        handleCardClick={handleCardClick}\n                        cards={cards}\n                        user={currentUser}\n                        handleUpdateUser={handleUpdateUser}\n                        handleCardLike={handleCardLike}\n                        handleCardDelete={handleCardDelete}\n                        isAddPlacePopupOpen={isAddPlacePopupOpen}\n                        closeAllPopups={closeAllPopups}\n                        handlePlaceAdd={handlePlaceAdd}\n                        isEditProfilePopupOpen={isEditProfilePopupOpen}\n                        isEditAvatarPopupOpen={isEditAvatarPopupOpen}\n                        handleUpdateAvatar={handleUpdateAvatar}\n                        selectedCard={selectedCard}\n                        loggedIn={isLoggedIn}\n                    />\n                    <Route path=\"/sign-in\">\n                        <Login onLogin={handleLogin}/>\n                    </Route>\n                    <Route path=\"/sign-up\">\n                        <Register/>\n                    </Route>\n                </Switch>\n            </CurrentUserContext.Provider>))\n};\n\n\nexport default withRouter(App);\n\n"]},"metadata":{},"sourceType":"module"}