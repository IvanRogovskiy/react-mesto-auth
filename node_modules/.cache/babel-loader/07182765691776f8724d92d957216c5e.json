{"ast":null,"code":"const BASE_URL = `https://auth.nomoreparties.co`;\nexport const checkResponse = res => {\n  if (res.ok) {\n    return res.json();\n  }\n\n  return Promise.reject(res);\n};\nexport const register = (email, password) => {\n  const body1 = JSON.stringify({\n    password,\n    email\n  });\n  console.log(body1);\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(response => {\n    return checkResponse(response);\n  }).catch(err => console.log(`ewqe${err}`));\n};\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(res => {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return res.status;\n    }\n  }).then(data => {\n    if (data.code !== 400 && data.code !== 401) {\n      localStorage.setItem('jwt', data.token);\n      return data;\n    }\n  });\n};","map":{"version":3,"sources":["/Users/ivanrogovskiy/Documents/tries/yandex/react-mesto-auth/src/utils/auth.js"],"names":["BASE_URL","checkResponse","res","ok","json","Promise","reject","register","email","password","body1","JSON","stringify","console","log","fetch","method","headers","body","then","response","catch","err","authorize","status","data","code","localStorage","setItem","token"],"mappings":"AAAA,MAAMA,QAAQ,GAAI,+BAAlB;AAEA,OAAO,MAAMC,aAAa,GAAIC,GAAD,IAAS;AAClC,MAAIA,GAAG,CAACC,EAAR,EAAY;AAAE,WAAOD,GAAG,CAACE,IAAJ,EAAP;AAAmB;;AACjC,SAAOC,OAAO,CAACC,MAAR,CAAeJ,GAAf,CAAP;AACH,CAHM;AAKP,OAAO,MAAMK,QAAQ,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,QAAMC,KAAK,GAAGC,IAAI,CAACC,SAAL,CAAe;AAACH,IAAAA,QAAD;AAAWD,IAAAA;AAAX,GAAf,CAAd;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA,SAAOK,KAAK,CAAE,GAAEf,QAAS,SAAb,EAAuB;AAC/BgB,IAAAA,MAAM,EAAE,MADuB;AAE/BC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFsB;AAK/BC,IAAAA,IAAI,EAAEP,IAAI,CAACC,SAAL,CAAe;AAACH,MAAAA,QAAD;AAAWD,MAAAA;AAAX,KAAf;AALyB,GAAvB,CAAL,CAOFW,IAPE,CAOIC,QAAD,IAAc;AAChB,WAAOnB,aAAa,CAACmB,QAAD,CAApB;AACH,GATE,EAUFC,KAVE,CAUKC,GAAD,IAAST,OAAO,CAACC,GAAR,CAAa,OAAMQ,GAAI,EAAvB,CAVb,CAAP;AAWH,CAdM;AAgBP,OAAO,MAAMC,SAAS,GAAG,CAACf,KAAD,EAAQC,QAAR,KAAqB;AAC1C,SAAOM,KAAK,CAAE,GAAEf,QAAS,SAAb,EAAsB;AAC9BgB,IAAAA,MAAM,EAAE,MADsB;AAE9BC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFqB;AAK9BC,IAAAA,IAAI,EAAEP,IAAI,CAACC,SAAL,CAAe;AAACH,MAAAA,QAAD;AAAWD,MAAAA;AAAX,KAAf;AALwB,GAAtB,CAAL,CAOFW,IAPE,CAOIjB,GAAD,IAAS;AACX,QAAGA,GAAG,CAACC,EAAP,EAAW;AACP,aAAOD,GAAG,CAACE,IAAJ,EAAP;AACH,KAFD,MAEO;AACC,aAAOF,GAAG,CAACsB,MAAX;AACH;AACJ,GAbF,EAeFL,IAfE,CAeIM,IAAD,IAAU;AACZ,QAAIA,IAAI,CAACC,IAAL,KAAc,GAAd,IAAqBD,IAAI,CAACC,IAAL,KAAc,GAAvC,EAA6C;AACzCC,MAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BH,IAAI,CAACI,KAAjC;AACA,aAAOJ,IAAP;AACH;AACJ,GApBE,CAAP;AAqBH,CAtBM","sourcesContent":["const BASE_URL = `https://auth.nomoreparties.co`\n\nexport const checkResponse = (res) => {\n    if (res.ok) { return res.json() }\n    return Promise.reject(res)\n}\n\nexport const register = (email, password) => {\n    const body1 = JSON.stringify({password, email})\n    console.log(body1);\n    return fetch(`${BASE_URL}/signup`, {\n        method: 'POST',\n        headers: {\n            'Content-type': 'application/json',\n        },\n        body: JSON.stringify({password, email})\n    })\n        .then((response) => {\n            return checkResponse(response)\n        })\n        .catch((err) => console.log(`ewqe${err}`))\n}\n\nexport const authorize = (email, password) => {\n    return fetch(`${BASE_URL}/signin`,{\n        method: 'POST',\n        headers: {\n            'Content-type': 'application/json',\n        },\n        body: JSON.stringify({password, email})\n    })\n        .then((res) => {\n            if(res.ok) {\n                return res.json()\n            } else {\n                    return res.status\n                }\n            }\n        )\n        .then((data) => {\n            if((data.code !== 400 && data.code !== 401)) {\n                localStorage.setItem('jwt', data.token)\n                return data\n            }\n        })\n}\n\n"]},"metadata":{},"sourceType":"module"}