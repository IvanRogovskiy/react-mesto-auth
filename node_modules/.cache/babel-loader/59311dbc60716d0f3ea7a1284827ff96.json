{"ast":null,"code":"var _jsxFileName = \"/Users/ivanrogovskiy/Documents/tries/yandex/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport '../App.css';\nimport React from \"react\";\nimport '../index.css';\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from '../utils/Api';\nimport { CurrentUserContext } from '../contexts/currentUserContext';\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({\n    isOpened: false,\n    name: \"\",\n    link: \"\"\n  });\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  };\n\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  };\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(true);\n  };\n\n  const closeAllPopups = () => {\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setSelectedCard({ ...selectedCard,\n      isOpened: false\n    });\n  };\n\n  const handleCardClick = card => {\n    setSelectedCard({\n      isOpened: true,\n      name: card.name,\n      link: card.link\n    });\n  };\n\n  const handleUpdateUser = _ref => {\n    let {\n      name,\n      about\n    } = _ref;\n    api.updateUserInfo({\n      name,\n      about\n    }).then(data => setCurrentUser({\n      currentUser,\n      ...data\n    })).catch(err => console.log(err));\n    closeAllPopups();\n  };\n\n  const handleUpdateAvatar = link => {\n    api.updateUserAvatar(link).then(data => setCurrentUser({\n      currentUser,\n      ...data\n    })).catch(err => console.log(err));\n    closeAllPopups();\n  };\n\n  React.useEffect(() => {\n    api.getMyProfileInfo().then(userData => {\n      console.log(userData);\n      setCurrentUser(userData);\n    }).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'page-container',\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        onEditProfile: handleEditProfileClick,\n        onEditAvatar: handleEditAvatarClick,\n        onAddPlace: handleAddPlaceClick,\n        onCardClick: handleCardClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        name: \"add\",\n        title: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\",\n        onClose: closeAllPopups,\n        isOpened: isAddPlacePopupOpen,\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"popup__field\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"popup__input popup__input_type_title\",\n              name: \"title\",\n              type: \"text\",\n              placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n              id: \"title\",\n              required: true,\n              minLength: \"2\",\n              maxLength: \"40\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"popup__input-error title-input-error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"popup__field\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"popup__input popup__input_type_src\",\n              name: \"src\",\n              type: \"url\",\n              id: \"src\",\n              placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"popup__input-error src-input-error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            className: \"popup__save\",\n            value: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpened: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUserUpdate: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpened: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onAvatarUpdate: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        selectedCard: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"vaPS6qhVPZXnLA4PgyjgHbAxRL4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ivanrogovskiy/Documents/tries/yandex/mesto-react/src/components/App.js"],"names":["React","Header","Main","Footer","PopupWithForm","ImagePopup","api","CurrentUserContext","EditProfilePopup","EditAvatarPopup","App","currentUser","setCurrentUser","useState","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","isOpened","name","link","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","closeAllPopups","handleCardClick","card","handleUpdateUser","about","updateUserInfo","then","data","catch","err","console","log","handleUpdateAvatar","updateUserAvatar","useEffect","getMyProfileInfo","userData"],"mappings":";;;AAAA,OAAO,YAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,kBAAT,QAAmC,gCAAnC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEd,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,KAAK,CAACa,QAAN,CAAe,EAAf,CAAtC;AAEA,QAAM,CAACC,sBAAD,EAAyBC,yBAAzB,IAAsDf,KAAK,CAACa,QAAN,CAAe,KAAf,CAA5D;AACA,QAAM,CAACG,mBAAD,EAAsBC,sBAAtB,IAAgDjB,KAAK,CAACa,QAAN,CAAe,KAAf,CAAtD;AACA,QAAM,CAACK,qBAAD,EAAwBC,wBAAxB,IAAoDnB,KAAK,CAACa,QAAN,CAAe,KAAf,CAA1D;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCrB,KAAK,CAACa,QAAN,CAAe;AACnDS,IAAAA,QAAQ,EAAE,KADyC;AAEnDC,IAAAA,IAAI,EAAE,EAF6C;AAGnDC,IAAAA,IAAI,EAAE;AAH6C,GAAf,CAAxC;;AAMA,QAAMC,qBAAqB,GAAG,MAAM;AAChCN,IAAAA,wBAAwB,CAAC,IAAD,CAAxB;AACH,GAFD;;AAIA,QAAMO,sBAAsB,GAAG,MAAM;AACjCX,IAAAA,yBAAyB,CAAC,IAAD,CAAzB;AACH,GAFD;;AAIA,QAAMY,mBAAmB,GAAG,MAAM;AAC9BV,IAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACH,GAFD;;AAIA,QAAMW,cAAc,GAAG,MAAM;AACzBX,IAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACAE,IAAAA,wBAAwB,CAAC,KAAD,CAAxB;AACAJ,IAAAA,yBAAyB,CAAC,KAAD,CAAzB;AACAM,IAAAA,eAAe,CAAC,EAAC,GAAGD,YAAJ;AAAkBE,MAAAA,QAAQ,EAAE;AAA5B,KAAD,CAAf;AACH,GALD;;AAOA,QAAMO,eAAe,GAAIC,IAAD,IAAU;AAC9BT,IAAAA,eAAe,CAAC;AACZC,MAAAA,QAAQ,EAAE,IADE;AAEZC,MAAAA,IAAI,EAAEO,IAAI,CAACP,IAFC;AAGZC,MAAAA,IAAI,EAAEM,IAAI,CAACN;AAHC,KAAD,CAAf;AAKH,GAND;;AAQA,QAAMO,gBAAgB,GAAG,QAAmB;AAAA,QAAlB;AAACR,MAAAA,IAAD;AAAOS,MAAAA;AAAP,KAAkB;AAC1C1B,IAAAA,GAAG,CAAC2B,cAAJ,CAAmB;AAACV,MAAAA,IAAD;AAAOS,MAAAA;AAAP,KAAnB,EACKE,IADL,CACUC,IAAI,IAAIvB,cAAc,CAAC;AAACD,MAAAA,WAAD;AAAc,SAAGwB;AAAjB,KAAD,CADhC,EAEKC,KAFL,CAEWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFlB;AAGAT,IAAAA,cAAc;AACf,GALD;;AAOA,QAAMY,kBAAkB,GAAIhB,IAAD,IAAU;AACjClB,IAAAA,GAAG,CAACmC,gBAAJ,CAAqBjB,IAArB,EACKU,IADL,CACUC,IAAI,IAAIvB,cAAc,CAAC;AAACD,MAAAA,WAAD;AAAc,SAAGwB;AAAjB,KAAD,CADhC,EAEKC,KAFL,CAEWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFlB;AAGAT,IAAAA,cAAc;AACjB,GALD;;AAOA5B,EAAAA,KAAK,CAAC0C,SAAN,CAAgB,MAAM;AAClBpC,IAAAA,GAAG,CAACqC,gBAAJ,GACKT,IADL,CACWU,QAAD,IAAc;AAChBN,MAAAA,OAAO,CAACC,GAAR,CAAYK,QAAZ;AACAhC,MAAAA,cAAc,CAACgC,QAAD,CAAd;AACH,KAJL,EAKKR,KALL,CAKWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALlB;AAMH,GAPD,EAOG,EAPH;AASF,sBACE,QAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAE1B,WAApC;AAAA,2BACI;AAAK,MAAA,SAAS,EAAE,gBAAhB;AAAA,8BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD;AACI,QAAA,aAAa,EAAEe,sBADnB;AAEI,QAAA,YAAY,EAAED,qBAFlB;AAGI,QAAA,UAAU,EAAEE,mBAHhB;AAII,QAAA,WAAW,EAAEE;AAJjB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAQI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cARJ,eASI,QAAC,aAAD;AACI,QAAA,IAAI,EAAC,KADT;AAEI,QAAA,KAAK,EAAC,+DAFV;AAGI,QAAA,OAAO,EAAED,cAHb;AAII,QAAA,QAAQ,EAAEZ,mBAJd;AAAA,+BAKI;AAAA,kCACI;AAAO,YAAA,SAAS,EAAC,cAAjB;AAAA,oCACI;AAAO,cAAA,SAAS,EAAC,sCAAjB;AAAwD,cAAA,IAAI,EAAC,OAA7D;AAAqE,cAAA,IAAI,EAAC,MAA1E;AACI,cAAA,WAAW,EAAC,kDADhB;AAC2B,cAAA,EAAE,EAAC,OAD9B;AAEI,cAAA,QAAQ,MAFZ;AAEa,cAAA,SAAS,EAAC,GAFvB;AAE2B,cAAA,SAAS,EAAC;AAFrC;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII;AAAM,cAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAOI;AAAO,YAAA,SAAS,EAAC,cAAjB;AAAA,oCACI;AAAO,cAAA,SAAS,EAAC,oCAAjB;AAAsD,cAAA,IAAI,EAAC,KAA3D;AAAiE,cAAA,IAAI,EAAC,KAAtE;AAA4E,cAAA,EAAE,EAAC,KAA/E;AACI,cAAA,WAAW,EAAC,oGADhB;AACqC,cAAA,QAAQ;AAD7C;AAAA;AAAA;AAAA;AAAA,oBADJ,eAGI;AAAM,cAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAYI;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,SAAS,EAAC,aAA/B;AAA6C,YAAA,KAAK,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA,kBAZJ;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,cATJ,eA6BI,QAAC,gBAAD;AACI,QAAA,QAAQ,EAAEF,sBADd;AAEI,QAAA,OAAO,EAAEc,cAFb;AAGI,QAAA,YAAY,EAAEG;AAHlB;AAAA;AAAA;AAAA;AAAA,cA7BJ,eAkCI,QAAC,eAAD;AACI,QAAA,QAAQ,EAAEb,qBADd;AAEI,QAAA,OAAO,EAAEU,cAFb;AAGI,QAAA,cAAc,EAAEY;AAHpB;AAAA;AAAA;AAAA;AAAA,cAlCJ,eAuCI,QAAC,UAAD;AAAY,QAAA,YAAY,EAAEpB,YAA1B;AAAwC,QAAA,OAAO,EAAEQ;AAAjD;AAAA;AAAA;AAAA;AAAA,cAvCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AA6CD,CA5GD;;GAAMlB,G;;KAAAA,G;AA8GN,eAAeA,GAAf","sourcesContent":["import '../App.css';\nimport React from \"react\";\nimport '../index.css'\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from '../utils/Api';\nimport { CurrentUserContext } from '../contexts/currentUserContext';\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\n\nconst App = () => {\n\n    const [currentUser, setCurrentUser] = React.useState({});\n\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [selectedCard, setSelectedCard] = React.useState({\n        isOpened: false,\n        name: \"\",\n        link: \"\"\n    });\n\n    const handleEditAvatarClick = () => {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    const handleEditProfileClick = () => {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    const handleAddPlaceClick = () => {\n        setIsAddPlacePopupOpen(true);\n    }\n    \n    const closeAllPopups = () => {\n        setIsAddPlacePopupOpen(false);\n        setIsEditAvatarPopupOpen(false);\n        setIsEditProfilePopupOpen(false);\n        setSelectedCard({...selectedCard, isOpened: false})\n    }\n\n    const handleCardClick = (card) => {\n        setSelectedCard({\n            isOpened: true,\n            name: card.name ,\n            link: card.link,\n        })\n    }\n    \n    const handleUpdateUser = ({name, about}) => {\n      api.updateUserInfo({name, about})\n          .then(data => setCurrentUser({currentUser, ...data}))\n          .catch(err => console.log(err))\n      closeAllPopups();\n    }\n\n    const handleUpdateAvatar = (link) => {\n        api.updateUserAvatar(link)\n            .then(data => setCurrentUser({currentUser, ...data}))\n            .catch(err => console.log(err))\n        closeAllPopups();\n    }\n\n    React.useEffect(() => {\n        api.getMyProfileInfo()\n            .then((userData) => {\n                console.log(userData);\n                setCurrentUser(userData)\n            })\n            .catch(err => console.log(err))\n    }, [])\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n        <div className={'page-container'}>\n            <Header/>\n            <Main\n                onEditProfile={handleEditProfileClick}\n                onEditAvatar={handleEditAvatarClick}\n                onAddPlace={handleAddPlaceClick}\n                onCardClick={handleCardClick}\n            />\n            <Footer/>\n            <PopupWithForm\n                name='add'\n                title='Новое место'\n                onClose={closeAllPopups}\n                isOpened={isAddPlacePopupOpen}>\n                <>\n                    <label className=\"popup__field\">\n                        <input className=\"popup__input popup__input_type_title\" name=\"title\" type=\"text\"\n                            placeholder=\"Название\" id=\"title\"\n                            required minLength=\"2\" maxLength=\"40\"/>\n                        <span className=\"popup__input-error title-input-error\"/>\n                    </label>\n                    <label className=\"popup__field\">\n                        <input className=\"popup__input popup__input_type_src\" name=\"src\" type=\"url\" id=\"src\"\n                            placeholder=\"Ссылка на картинку\" required/>\n                        <span className=\"popup__input-error src-input-error\"/>\n                    </label>\n                    <input type=\"submit\" className=\"popup__save\" value=\"Создать\"/>\n                </>\n                </PopupWithForm>\n            <EditProfilePopup\n                isOpened={isEditProfilePopupOpen}\n                onClose={closeAllPopups}\n                onUserUpdate={handleUpdateUser}\n            />\n            <EditAvatarPopup\n                isOpened={isEditAvatarPopupOpen}\n                onClose={closeAllPopups}\n                onAvatarUpdate={handleUpdateAvatar}\n            />\n            <ImagePopup selectedCard={selectedCard} onClose={closeAllPopups}/>\n        </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}