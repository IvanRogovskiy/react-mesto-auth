{"ast":null,"code":"const BASE_URL = `https://auth.nomoreparties.co`; // export const checkResponse = ({res, json}) => {\n//     if (res.ok) { return json }\n//     return Promise.reject(json.error)\n//\n// }\n\nexport const register = (email, password) => {\n  const body1 = JSON.stringify({\n    password,\n    email\n  });\n  console.log(body1);\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(res => {\n    return res.json().then(json => {\n      console.log(res, json);\n      return {\n        res,\n        json\n      };\n    }).catch(err => {\n      throw new Error(err);\n    });\n  }).then(_ref => {\n    let {\n      res,\n      json\n    } = _ref;\n\n    if (res.ok) {\n      return json;\n    }\n\n    return Promise.reject(json.error); // return checkResponse(({res, json}))\n  }).catch(err => {\n    throw new Error(err);\n  });\n};\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }) // .then((res) => {\n  //     if(res.ok) {\n  //         return res.json()\n  //     } else {\n  //             return res.status\n  //         }\n  //     }\n  // )\n  // .then((data) => {\n  //     if((data.code !== 400 && data.code !== 401)) {\n  //         localStorage.setItem('jwt', data.token)\n  //         return data\n  //     }\n  // })\n  .then(res => {\n    return res.json().then(json => {\n      console.log(res, json);\n      return {\n        res,\n        json\n      };\n    }).catch(err => {\n      throw new Error(err);\n    });\n  }).then(_ref2 => {\n    let {\n      res,\n      json\n    } = _ref2;\n\n    if (res.ok) {\n      return json;\n    }\n\n    return Promise.reject(json.message);\n  }).then(data => {}).catch(err => {\n    throw new Error(err);\n  });\n};","map":{"version":3,"sources":["/Users/ivanrogovskiy/Documents/tries/yandex/react-mesto-auth/src/utils/auth.js"],"names":["BASE_URL","register","email","password","body1","JSON","stringify","console","log","fetch","method","headers","body","then","res","json","catch","err","Error","ok","Promise","reject","error","authorize","message","data"],"mappings":"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","sourcesContent":["const BASE_URL = `https://auth.nomoreparties.co`\n\n// export const checkResponse = ({res, json}) => {\n//     if (res.ok) { return json }\n//     return Promise.reject(json.error)\n//\n// }\n\nexport const register = (email, password) => {\n    const body1 = JSON.stringify({password, email})\n    console.log(body1);\n    return fetch(`${BASE_URL}/signup`, {\n        method: 'POST',\n        headers: {\n            'Content-type': 'application/json',\n        },\n        body: JSON.stringify({password, email})\n    })\n        .then(res => {\n            return res.json().then(json => {\n                console.log(res, json);\n                return {res, json}\n            }).catch(err => {\n                throw new Error(err)\n            })\n        })\n        .then(({res, json}) => {\n            if (res.ok) { return json }\n            return Promise.reject(json.error)\n            // return checkResponse(({res, json}))\n        })\n        .catch((err) => {\n            throw new Error(err)\n        })\n}\n\nexport const authorize = (email, password) => {\n    return fetch(`${BASE_URL}/signin`,{\n        method: 'POST',\n        headers: {\n            'Content-type': 'application/json',\n        },\n        body: JSON.stringify({password, email})\n    })\n        // .then((res) => {\n        //     if(res.ok) {\n        //         return res.json()\n        //     } else {\n        //             return res.status\n        //         }\n        //     }\n        // )\n        // .then((data) => {\n        //     if((data.code !== 400 && data.code !== 401)) {\n        //         localStorage.setItem('jwt', data.token)\n        //         return data\n        //     }\n        // })\n        .then(res => {\n            return res.json().then(json => {\n                console.log(res, json);\n                return {res, json}\n            }).catch(err => {\n                throw new Error(err)\n            })\n        })\n        .then(({res, json}) => {\n            if (res.ok) {\n                return json\n            }\n            return Promise.reject(json.message)\n        })\n        .then((data) => {\n            \n        })\n        .catch((err) => {\n            throw new Error(err)\n        })\n}\n\n"]},"metadata":{},"sourceType":"module"}