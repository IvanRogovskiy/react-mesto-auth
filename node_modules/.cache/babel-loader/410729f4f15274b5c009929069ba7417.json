{"ast":null,"code":"var _jsxFileName = \"/Users/ivanrogovskiy/Documents/tries/yandex/mesto-react/src/components/PopupWithForm.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PopupWithForm = _ref => {\n  let {\n    onClose,\n    name,\n    isOpened,\n    title,\n    children\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `popup popup_type_${name} ${isOpened ? 'popup_opened' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onClose,\n        className: \"popup__close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 5,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"popup__title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: `popup__form popup__form_type_${name}`,\n        name: name,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 9\n  }, this);\n};\n\n_c = PopupWithForm;\nexport default PopupWithForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopupWithForm\");","map":{"version":3,"sources":["/Users/ivanrogovskiy/Documents/tries/yandex/mesto-react/src/components/PopupWithForm.js"],"names":["PopupWithForm","onClose","name","isOpened","title","children"],"mappings":";;;AAAA,MAAMA,aAAa,GAAG,QAAgD;AAAA,MAA/C;AAACC,IAAAA,OAAD;AAAUC,IAAAA,IAAV;AAAgBC,IAAAA,QAAhB;AAA0BC,IAAAA,KAA1B;AAAiCC,IAAAA;AAAjC,GAA+C;AAClE,sBACI;AAAK,IAAA,SAAS,EAAG,oBAAmBH,IAAK,IAAGC,QAAQ,GAAG,cAAH,GAAoB,EAAI,EAA5E;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEF,OAA/B;AAAwC,QAAA,SAAS,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA,kBAA8BG;AAA9B;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAM,QAAA,SAAS,EAAG,gCAA+BF,IAAK,EAAtD;AAAyD,QAAA,IAAI,EAAEA,IAA/D;AAAA,kBACKG;AADL;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAZD;;KAAML,a;AAcN,eAAeA,aAAf","sourcesContent":["const PopupWithForm = ({onClose, name, isOpened, title, children}) => {\n    return (\n        <div className={`popup popup_type_${name} ${isOpened ? 'popup_opened' : '' }`}>\n            <div className=\"popup__container\">\n                <button type=\"button\" onClick={onClose} className=\"popup__close\"/>\n                <h2 className=\"popup__title\">{title}</h2>\n                <form className={`popup__form popup__form_type_${name}`} name={name}>\n                    {children}\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default PopupWithForm"]},"metadata":{},"sourceType":"module"}