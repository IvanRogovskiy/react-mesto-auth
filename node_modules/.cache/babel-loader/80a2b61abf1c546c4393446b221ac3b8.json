{"ast":null,"code":"var _jsxFileName = \"/Users/ivanrogovskiy/Documents/tries/yandex/mesto-react/src/components/PopupWithForm.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PopupWithForm = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `popup popup_type_${props.name} ${props.isOpened ? 'popup_opened' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__container\",\n      onClick: props.onClose,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onClose,\n        className: \"popup__close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 5,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"popup__title\",\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: `popup__form popup__form_type_${props.name}`,\n        name: props.name,\n        children: props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 9\n  }, this);\n};\n\n_c = PopupWithForm;\nexport default PopupWithForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopupWithForm\");","map":{"version":3,"sources":["/Users/ivanrogovskiy/Documents/tries/yandex/mesto-react/src/components/PopupWithForm.js"],"names":["PopupWithForm","props","name","isOpened","onClose","title","children"],"mappings":";;;AAAA,MAAMA,aAAa,GAAIC,KAAD,IAAW;AAC7B,sBACI;AAAK,IAAA,SAAS,EAAG,oBAAmBA,KAAK,CAACC,IAAK,IAAGD,KAAK,CAACE,QAAN,GAAiB,cAAjB,GAAkC,EAAI,EAAxF;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAkC,MAAA,OAAO,EAAEF,KAAK,CAACG,OAAjD;AAAA,8BACI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEH,KAAK,CAACG,OAArC;AAA8C,QAAA,SAAS,EAAC;AAAxD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA,kBAA8BH,KAAK,CAACI;AAApC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAM,QAAA,SAAS,EAAG,gCAA+BJ,KAAK,CAACC,IAAK,EAA5D;AAA+D,QAAA,IAAI,EAAED,KAAK,CAACC,IAA3E;AAAA,kBACKD,KAAK,CAACK;AADX;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAZD;;KAAMN,a;AAcN,eAAeA,aAAf","sourcesContent":["const PopupWithForm = (props) => {\n    return (\n        <div className={`popup popup_type_${props.name} ${props.isOpened ? 'popup_opened' : '' }`}>\n            <div className=\"popup__container\" onClick={props.onClose}>\n                <button type=\"button\" onClick={props.onClose} className=\"popup__close\"/>\n                <h2 className=\"popup__title\">{props.title}</h2>\n                <form className={`popup__form popup__form_type_${props.name}`} name={props.name}>\n                    {props.children}\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default PopupWithForm"]},"metadata":{},"sourceType":"module"}